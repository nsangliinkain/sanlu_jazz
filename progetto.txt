🎟️
Gestione Eventi Musicali – Sanlu’s Jazz
👤 Ruoli utente
● Spettatore
● Artista
● Admin
🧠 Funzionalità principali per ogni ruolo
👥 Spettatore
● Registrazione/Login
● Visualizzazione eventi disponibili
● Ricerca eventi per nome, artista, data, luogo, genere
● Filtri per eventi (genere, prezzo, luogo, data)
● Acquisto biglietto (con codice univoco o QR)
● Visualizzazione biglietti acquistati (cronologia)
● Area personale con dati e cronologia
● Recensioni/commenti agli eventi
● Possibilità di seguire artisti preferiti
🎤 Artista
● Registrazione/Login
● Creazione e gestione eventi (titolo, descrizione, data, orario, luogo, prezzo, capienza)
● Visualizzazione dei propri eventi (stato: approvato / in attesa)
● Statistiche vendite (biglietti venduti per evento, incassi)
● Modifica eventi futuri (prima della data di svolgimento)
● Ricezione notifiche da admin (es. evento approvato/rifiutato)
● Messaggistica con amministratore o locali (opzionale)
🛠️
Admin
● Gestione utenti (visualizzazione, modifica, blocco/eliminazione)
● Gestione artisti (approvazione, modifica, sospensione)
● Gestione eventi (approvazione, modifica, eliminazione)
● Visualizzazione report vendite per evento, artista, periodo
● Notifiche automatiche agli utenti (evento approvato, modifiche)
● Dashboard con grafici/statistiche generali
● Moderazione recensioni e contenuti
🗃️
Struttura Database (MySQL)
Tabelle principali:
● users (id, nome, email, password, ruolo)
● events (id, artista_id, titolo, descrizione, data, orario, luogo, prezzo, posti_disponibili, stato, venue_id, image_url)
● tickets (id, user_id, event_id, codice, data_acquisto, prezzo)
● venues (id, nome_locale, indirizzo, capienza)
● genres (id, nome)
● event_genre (event_id, genre_id) — tabella pivot
● reviews (id, user_id, event_id, voto, commento, data)
● messages (id, sender_id, receiver_id, contenuto, data)
⚙️
Tecnologie
● Backend: Laravel 10+
● Frontend: Blade (o Vue.js + Laravel)
● Database: MySQL
● UI: Tailwind CSS o Bootstrap
● Autenticazione: Laravel Breeze / Laravel UI
● Grafici: Chart.js / Laravel Charts
✅ Funzionalità avanzate e opzionali
● Generazione QR code per ogni biglietto
● Download biglietto in PDF
● Notifiche in tempo reale (Laravel Echo + Pusher)
● Integrazione con sistema di pagamento (Stripe, PayPal)
● Aggiunta eventi al proprio calendario (Google Calendar)
● Modali per login/registrazione
● Middleware per protezione ruoli (auth, isAdmin, isArtista)
● Pannelli dinamici per ogni ruolo
● CRUD completo per eventi, biglietti e utenti
📅 Fasi di sviluppo consigliate
1. Analisi requisiti e definizione ruoli
2. Modellazione Database (ER e relazioni)
3. Setup Laravel e installazione pacchetti
4. Autenticazione e gestione accessi
5. Creazione CRUD eventi, biglietti, recensioni
6. Frontend e stile UI/UX
7. Testing e validazioni
8. Demo finale con dati simulati e grafici